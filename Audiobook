<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audiomack Downloader</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"></link>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background-color: #121212;
            color: white;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .container {
            width: 90%;
            max-width: 600px;
            text-align: center;
        }
        
        .logo {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 20px;
            color: #ff6600;
        }
        
        h1 {
            font-size: 1.8rem;
            margin-bottom: 10px;
            color: #ffffff;
        }
        
        p {
            color: #cccccc;
            margin-bottom: 30px;
            line-height: 1.5;
        }
        
        .input-container {
            position: relative;
            margin-bottom: 25px;
        }
        
        input[type="text"] {
            width: 100%;
            padding: 15px 20px;
            border-radius: 50px;
            border: none;
            outline: none;
            font-size: 16px;
            background-color: #1e1e1e;
            color: white;
        }
        
        button {
            background-color: #ff6600;
            color: white;
            border: none;
            padding: 15px 40px;
            border-radius: 50px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        button:hover {
            background-color: #e65c00;
            transform: translateY(-2px);
        }
        
        .features {
            margin-top: 40px;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            text-align: left;
        }
        
        .feature-icon {
            color: #ff6600;
            font-size: 24px;
            margin-right: 15px;
        }
        
        .footer {
            margin-top: 50px;
            color: #888888;
            font-size: 14px;
        }
        
        /* Download progress styling */
        .progress-container {
            margin-top: 20px;
            display: none;
        }
        
        .progress-bar {
            width: 100%;
            height: 10px;
            background-color: #333;
            border-radius: 5px;
            overflow: hidden;
            margin-bottom: 10px;
        }
        
        .progress-fill {
            height: 100%;
            background-color: #ff6600;
            width: 0%;
            transition: width 0.3s ease;
        }
        
        .status-message {
            color: #ccc;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <i class="fas fa-music"></i> AudioMack
        </div>
        
        <h1>Free Audiobook & Music Downloader</h1>
        <p>Download your favorite songs and audiobooks from Audiomack for free. Enter the URL below to start downloading.</p>
        
        <div class="input-container">
            <input type="text" placeholder="Enter Audiomack URL here..." id="urlInput">
        </div>
        
        <button onclick="downloadAudio()">Download Now</button>
        
        <!-- Progress bar -->
        <div class="progress-container" id="progressContainer">
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            <div class="status-message" id="statusMessage">Processing...</div>
        </div>
        
        <div class="features">
            <div class="feature-item">
                <div class="feature-icon"><i class="fas fa-bolt"></i></div>
                <div>
                    <strong>Fast Downloads</strong><br>
                    Get your files quickly with our optimized servers
                </div>
            </div>
            
            <div class="feature-item">
                <div class="feature-icon"><i class="fas fa-shield-alt"></i></div>
                <div>
                    <strong>Safe & Secure</strong><br>
                    No malware or viruses - guaranteed safe downloads
                </div>
            </div>
            
            <div class="feature-item">
                <div class="feature-icon"><i class="fas fa-mobile-alt"></i></div>
                <div>
                    <strong>Mobile Friendly</strong><br>
                    Works on any device - phone, tablet, or desktop
                </div>
            </div>
        </div>
        
        <div class="footer">
            Â© 2023 Audiomack Downloader | Terms of Service | Privacy Policy
        </div>
    </div>
    
    <script>
        async function downloadAudio() {
            const url = document.getElementById('urlInput').value.trim();
            if (!url) {
                alert('Please enter a valid Audiomack URL first.');
                return;
            }
            
            // Show progress container
            const progressContainer = document.getElementById('progressContainer');
            const progressFill = document.getElementById('progressFill');
            const statusMessage = document.getElementById('statusMessage');
            progressContainer.style.display = 'block';
            
            try {
                // Simulate processing steps
                updateProgress(10, "Validating URL...");
                
                // Check if URL is from audiomack.com
                if (!url.includes('audiomack.com')) {
                    throw new Error("URL must be from audiomack.com");
                }
                
                updateProgress(30, "Connecting to server...");
                
                // Simulate API call to fetch audio data
                await simulateDelay(1500);
                updateProgress(50, "Analyzing audio file...");
                
                await simulateDelay(2000);
                updateProgress(70, "Preparing download...");
                
                await simulateDelay(1000);
                updateProgress(90, "Finalizing...");
                
                // Create a fake download link
                setTimeout(() => {
                    createDownloadLink(url);
                    resetProgress();
                }, 500);
                
            } catch (error) {
                console.error('Error:', error);
                statusMessage.textContent = `Error: ${error.message}`;
                resetProgress();
            }
        }
        
        function updateProgress(percent, message) {
            const progressFill = document.getElementById('progressFill');
            const statusMessage = document.getElementById('statusMessage');
            progressFill.style.width = `${percent}%`;
            statusMessage.textContent = message;
        }
        
        function resetProgress() {
            const progressContainer = document.getElementById('progressContainer');
            const progressFill = document.getElementById('progressFill');
            const statusMessage = document.getElementById('statusMessage');
            progressContainer.style.display = 'none';
            progressFill.style.width = '0%';
            statusMessage.textContent = '';
        }
        
        function simulateDelay(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
        
        function createDownloadLink(audioUrl) {
            // Extract filename from URL or generate one
            let filename = 'audiomack-audio.mp3';
            
            // Create a blob with some sample audio data (in reality, you'd fetch actual audio)
            const audioData = new Uint8Array([73, 68, 51, 3, 0, 0, 0, 0, 0, 0]); // ID3 tag header
            
            const blob = new Blob([audioData], { type: 'audio/mpeg' });
            const url = URL.createObjectURL(blob);
            
            // Create download link
            const a = document.createElement('a');
            a.href = url;
            a.download = filename;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
            
            // Update UI after download
            const statusMessage = document.getElementById('statusMessage');
            statusMessage.textContent = 'Download completed successfully!';
            statusMessage.style.color = '#4CAF50';
        }
        
        // Allow pressing Enter key to trigger download
        document.getElementById('urlInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                downloadAudio();
            }
        });
    </script>
</body>
</html>
